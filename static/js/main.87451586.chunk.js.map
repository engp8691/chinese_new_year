{"version":3,"sources":["actions/index.js","reducers/index.js","Link.js","Celebrate.js","Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["addNumber","number","type","AllActions","ADD_NUMBER","removeNumber","REMOVE_NUMBER","restartGame","RESTART_GAME","toggleImage","todisplay","TOGGLE_IMAGE","reducers","combineReducers","numbers","state","arguments","length","undefined","maxNumber","luckyNumber","action","isNaN","Math","floor","random","new_state_numbers_unique","Object","toConsumableArray","concat","filter","value","index","self","indexOf","sort","a","b","new_state_numbers","splice","imageVisibility","Link","props","selectedClass","selected","react_default","createElement","className","onClick","children","Celebrate","hanleClick","e","dispatch","_this","img_url","this","display","react","src","alt","Component","connect","ownProps","console","log","objectSpread","Wrapper","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","textContent","target","parseInt","setState","redNumber","nextState","nextProps","prevProps","prevState","_this2","AllLinks","map","elem","array","isSelected","tail","divKey","key","src_Link","src_Celebrate","store","createStore","combinedReducer","App","react_redux_es","src_Wrapper","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87451586.chunk.js","sourcesContent":["export const addNumber = number => ({\n\ttype: AllActions.ADD_NUMBER,\n\tnumber\n})\n\nexport const removeNumber = number => ({\n\ttype: AllActions.REMOVE_NUMBER,\n\tnumber\n})\n\nexport const restartGame = () => ({\n\ttype: AllActions.RESTART_GAME,\n\tnumber: -1\n})\n\nexport const toggleImage = todisplay => ({\n\ttype: AllActions.TOGGLE_IMAGE,\n\ttodisplay\n})\n\nexport const AllActions = {\n\tADD_NUMBER: 'ADD_NUMBER',\n\tREMOVE_NUMBER: 'REMOVE_NUMBER',\n\tRESTART_GAME: 'RESTART_GAME',\n\tTOGGLE_IMAGE: 'TOGGLE_IMAGE'\n}\n","import { AllActions } from '../actions';\nimport { combineReducers } from 'redux';\n\nconst numbers = (state = {numbers: [], maxNumber: 0, luckyNumber: 0}, action) => {\n\tif(isNaN(action.number)){\n\t\treturn state;\n\t}\n\n\tswitch (action.type) {\n\t\tcase AllActions.ADD_NUMBER:\n\t\t\tif(action.number){\n\t\t\t\tlet maxNumber = +action.number;\n\t\t\t\tlet luckyNumber = Math.floor(Math.random() * maxNumber);\n                if(luckyNumber<maxNumber){\n                        luckyNumber += 1;\n                }\n\t\t\t\tlet new_state_numbers = [...state.numbers, action.number];\n\t\t\t\tlet new_state_numbers_unique = new_state_numbers.filter((value, index, self) => {return self.indexOf(value) === index});\n\t\t\t\tnew_state_numbers_unique.sort(function(a, b){return a-b});\n\n\t\t\t\treturn {numbers: new_state_numbers_unique, maxNumber: maxNumber, luckyNumber: luckyNumber};\n\t\t\t}else{\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase AllActions.REMOVE_NUMBER:\n\t\t\tif(action.number){\n\t\t\t\tlet new_state_numbers = [...state.numbers];\n\t\t\t\tnew_state_numbers.splice(new_state_numbers.indexOf(action.number), 1);\n\n\t\t\t\tlet maxNumber = action.number--;\n\t\t\t\tlet luckyNumber = Math.floor(Math.random() * maxNumber);\n\t\t\t\tif(luckyNumber<maxNumber){\n\t\t\t\t\tluckyNumber += 1;\n\t\t\t\t}\n\t\t\t\treturn {numbers: new_state_numbers, maxNumber: maxNumber, luckyNumber: luckyNumber};\n\t\t\t}else{\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase AllActions.RESTART_GAME:\n\t\t\tlet maxNumber = state.maxNumber;\n\t\t\tlet new_state_numbers = [...state.numbers];\n\t\t\tlet luckyNumber = Math.floor(Math.random() * maxNumber);\n\t\t\tif(luckyNumber<maxNumber){\n\t\t\t\tluckyNumber += 1;\n\t\t\t}\n\t\t\treturn {numbers: new_state_numbers, maxNumber: maxNumber, luckyNumber: luckyNumber};\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst imageVisibility = (state = {todisplay: false}, action) => {\n\tswitch (action.type) {\n\t\tcase AllActions.TOGGLE_IMAGE:\n\t\t\treturn {todisplay: action.todisplay};\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst reducers = combineReducers({numbers, imageVisibility});\n\nexport default reducers;\n","import React from 'react';\nimport './App.css';\n\nconst Link = (props) => {\n\tlet selectedClass = \"link\";\n\tif(props.selected){\n\t\tselectedClass = \"redlink\";\n\t}\n\treturn (\n      <div className={selectedClass} onClick={props.onClick}>\n\t  \t{props.children}\n      </div>\n    );\n}\n\nexport default Link;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { toggleImage, restartGame } from './actions';\n\nimport './App.css';\n\nconst mapStateToProps = function(state, ownProps) {\n\tconsole.log(5, state, ownProps);\n\treturn {...state, ...ownProps}\n}\n\nclass Celebrate extends Component {\n\thanleClick = (e) => {\n\t\tlet { dispatch } = this.props;\n\t\tdispatch(toggleImage(false));\n\t\tdispatch(restartGame());\n\t}\n\n\trender() {\n\t\tlet images = [\"https://t3.ftcdn.net/jpg/02/13/13/70/500_F_213137035_psgI3vjEDlMD9NQuELFGOSdCjepK4dCj.jpg\", \"https://t4.ftcdn.net/jpg/01/00/48/91/500_F_100489124_qE3z0Wqq5fLYAd7CNjMTW6ZTfBGNHLSy.jpg\", \"https://t4.ftcdn.net/jpg/01/89/13/49/500_F_189134983_4t1exHfKmyxJjMIlXLozDW9GZIBCejeZ.jpg\", \"https://t3.ftcdn.net/jpg/01/89/00/52/500_F_189005268_DFOEZfXVekzAfHLSfVG78XQTjiYWs3Dw.jpg\", \"https://www.clipartmax.com/png/middle/68-684764_dragon-dance-lion-dance-chinese-new-year-cartoon-chinese-new-year-lion.png\"];\n\n\t\tlet luckyNumber = Math.floor(Math.random() * 4);\n\t\tlet img_url = images[luckyNumber];\n\n\t\tif(!this.props.display){\n\t\t\treturn null;\n\t\t}else{\n\t\t\tif(this.props.display){\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className=\"hover_bkgr_fricc\">\n\t\t\t\t\t\t\t<span className=\"helper\"></span>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"popupCloseButton\" onClick={this.hanleClick}>X</div>\n\t\t\t\t\t\t\t\t<div><img src={img_url} onClick={this.hanleClick} alt=\"\"></img></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps)(Celebrate);\n\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { addNumber, removeNumber, toggleImage } from './actions';\nimport Link from './Link';\nimport Celebrate from './Celebrate';\n\nimport './App.css';\n\nlet maxNumber = 0;\n\nclass Wrapper extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {redNumber: 0};\n\t}\n\n\tshouldComponentUpdate(nextState, nextProps){\n\t\treturn true;\n\t}\n\n\tcomponentWillUpdate(nextProps, nextState){\n\t\treturn true;\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState){\n\t\tif(prevProps.numbers.numbers.length !== this.props.numbers.numbers.length){\n\t\t\tthis.setState({redNumber: 0});\n\t\t}\n\t\tif(prevProps.imageVisibility.todisplay !== this.props.imageVisibility.todisplay){\n\t\t\tif(prevProps.imageVisibility.todisplay === true){\n\t\t\t\tthis.setState({redNumber: 0});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleClick = (e) => {\n\t\tif(this.props.imageVisibility.todisplay) return;\n\n\t\tlet { target } = e;\n\t\tlet { textContent } = target;\n\n\t\tif(!isNaN(textContent)){\n\t\t\ttextContent = parseInt(textContent);\n\t\t}\n\n\t\tif(this.props.numbers.luckyNumber === textContent){\n\t\t\tlet { dispatch } = this.props;\n\t\t\tdispatch(toggleImage(true));\n\t\t}\n\t\tthis.setState({redNumber: textContent});\n\t};\n\n\taddNumber = (e) => {\n\t\tlet { dispatch } = this.props;\n\t\tmaxNumber++;\n    \tdispatch(addNumber(maxNumber));\n\t}\n\n\tremoveNumber = (e) => {\n\t\tlet { dispatch } = this.props;\n\t\tdispatch(removeNumber(maxNumber));\n\t\tif(maxNumber>0){\n\t\t\tmaxNumber--;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst AllLinks = this.props.numbers.numbers.map((elem, index, array)=>{\n\t\t\tlet isSelected = false;\n\t\t\tif(elem === this.state.redNumber){\n\t\t\t\tisSelected = true;\n\t\t\t}\n\t\t\tlet tail = (<span>=></span>);\n\t\t\tif(index === array.length-1){\n\t\t\t\ttail = null;\n\t\t\t}\n\t\t\tlet divKey = \"div\" + elem;\n\t\t\treturn (<Fragment key={divKey}><Link onClick={this.handleClick} selected={isSelected}>{elem}</Link> {tail} </Fragment> );\n\t\t});\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t<div className=\"greetings\">\n\t\t\t\t<span>看看您的手气如何，选择您的幸运号码，试试需要几次才能选到惊喜。</span>\n\t\t\t</div>\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<Celebrate display={this.props.imageVisibility.todisplay} />\n\t\t\t\t<br/><br/>\n\t\t\t\t{AllLinks}\n\t\t\t</div>\n\t\t\t<div className=\"greetings\">\n\t\t\t\t<span>增减数字变化难度：</span>\n\t\t\t\t<img className=\"buttonImg\" src=\"plus.png\"  alt=\"\" onClick={this.addNumber}/>\n\t\t\t\t<img className=\"buttonImg\" src=\"minus.png\" alt=\"\" onClick={this.removeNumber}/>\n\t\t\t</div>\n\t\t\t</Fragment>\n\n\t\t);\n\t}\n}\n\nconst mapStateToProps = function(state, ownProps) {\n\treturn {...state, ...ownProps}\n}\n\nexport default connect(mapStateToProps)(Wrapper);\n","import React, { Component } from 'react';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport combinedReducer from './reducers'\nimport Wrapper from './Wrapper';\n\nconst store = createStore(combinedReducer)\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\t\t\t<Provider store={store}>\n\t\t\t  \t<Wrapper />\n\t\t\t</Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}